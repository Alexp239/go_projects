// Automatically generated by MockGen. DO NOT EDIT!
// Source: msu-go-11/6/06_mock/users (interfaces: Users)

package mock_users

import (
	gomock "github.com/golang/mock/gomock"
	users "msu-go-11/6/06_mock/users"
)

// Mock of Users interface
type MockUsers struct {
	ctrl     *gomock.Controller
	recorder *_MockUsersRecorder
}

// Recorder for MockUsers (not exported)
type _MockUsersRecorder struct {
	mock *MockUsers
}

func NewMockUsers(ctrl *gomock.Controller) *MockUsers {
	mock := &MockUsers{ctrl: ctrl}
	mock.recorder = &_MockUsersRecorder{mock}
	return mock
}

func (_m *MockUsers) EXPECT() *_MockUsersRecorder {
	return _m.recorder
}

func (_m *MockUsers) Get(_param0 int) users.User {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(users.User)
	return ret0
}

func (_mr *_MockUsersRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockUsers) Put(_param0 int, _param1 string, _param2 int) {
	_m.ctrl.Call(_m, "Put", _param0, _param1, _param2)
}

func (_mr *_MockUsersRecorder) Put(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Put", arg0, arg1, arg2)
}
